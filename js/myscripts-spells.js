
var level_number = '0'; //Дефолтное значение
var class_name = 'bard'; //Дефолтное значение
var spellname = document.getElementsByClassName('spellname');
var des = document.getElementsByClassName('featherlight-inner');
var suggestion; //Бывшее оглавлене
var current_display_table; //Текущая отображаемая таблица спеллов
var current_display_class; //Текущий отображаемый класс
var current_display_spell; //Текущий отображаемый спелл
var current_display_level = 1; //Текущий отображаемый уровень
var check = 0; //Переменная для прокликивания
var found = []; //Массив для забивки того, что найдено и подсвечено поиском. И дальнейшего удаления спанов.
var content; //Переменная в которой собирается таблица спеллов из массивов ниже.
var spellsource = document.getElementsByClassName('source');
var draw_table = [];
var draw_table2 = [];
var source_class = document.getElementsByClassName('source');
//var sourcep_class = document.getElementsByClassName('sourcep')
var n; //Кол-во столбцов в таблице
var dice_array = [];

//Для swipe
var startX;
var startY;
var endY;
var endY;  
//Сортировано по алфавиту пока только бард
var bard0 = ['Волшебная рука (КИ)','Дружба (КИ)','Защита от оружия (КИ)','Звёздный огонёк (КИ)','Злая насмешка (КИ)','Малая иллюзия (КИ)','Меткий удар (КИ)','Пляшущие огоньки (КИ)','Починка (КИ)','Раскат грома (КИ)','Свет (КИ)','Сообщение (КИ)','Фокусы (КИ)'];
var bard1 = ['Безмолвный образ (КИ)','Волна грома (КИ)','Героизм (КИ)','Диссонирующий шёпот (КИ)','Дружба с животными (КИ)','Жуткий смех Таши (КИ)','Лечащее слово (КИ)','Лечение ран (КИ)','Маскировка (КИ)','Невидимое письмо (КИ)','Невидимый слуга (КИ)','Обнаружение магии (КИ)','Огонь фей (КИ)','Опознание (КИ)','Очарование личности (КИ)','Падение пёрышком (КИ)','Понимание языков (КИ)','Порча (КИ)','Приказ (КИ)','Разговор с животными (КИ)','Сверкающие брызги (КИ)','Скороход (КИ)','Усыпление (КИ)'];
var bard2 = ['Видение невидимого (КИ)','Внушение (КИ)','Волшебные уста (КИ)','Воображаемая сила (КИ)','Глухота/слепота (КИ)','Дребезги (КИ)','Корона безумия (КИ)','Малое восстановление (КИ)','Невидимость (КИ)','Облако кинжалов (КИ)','Область истины (КИ)','Обнаружение мыслей (КИ)','Отражения (КИ)','Подмога (КИ)','Поиск животных или растений (КИ)','Поиск объекта (КИ)','Раскалённый металл (КИ)','Речь златоуста (КИ)','Стук (КИ)','Тишина (КИ)','Увеличение/уменьшение (КИ)','Удержание личности (КИ)','Улучшение характеристики (КИ)','Умиротворение (КИ)'];
var bard3 = ['Гипнотический узор (КИ)','Замедление (КИ)','Зловонное облако (КИ)','Леомундова хижина (КИ)','Множественное лечащее слово (КИ)','Необнаружимость (КИ)','Образ (КИ)','Охранные руны (КИ)','Подсматривание (КИ)','Послание (КИ)','Притворная смерть (КИ)','Проклятие (КИ)','Разговор с мёртвыми (КИ)','Разговор с растениями (КИ)','Рассеивание магии (КИ)','Рост растений (КИ)','Ужас (КИ)','Языки (КИ)'];
var bard4 = ['Воображаемый убийца (КИ)','Высшая невидимость (КИ)','Источник лунного света (КИ)','Мираж (КИ)','Очарование монстра (КИ)','Переносящая дверь (КИ)','Поиск существа (КИ)','Превращение (КИ)','Принуждение (КИ)','Свобода перемещения (КИ)','Смятение (КИ)'];
var bard5 = ['Вещий сон (КИ)','Воскрешение (КИ)','Высшее восстановление (КИ)','Знание легенд (КИ)','Изменение памяти (КИ)','Королевское величие Йоланды (КИ)','Круг телепортации (КИ)','Ментальная связь Рэри (КИ)','Множественное лечение ран (КИ)','Наблюдение (КИ)','Обет (КИ)','Оживление вещей (КИ)','Планарные узы (КИ)','Подчинение личности (КИ)','Притворство (КИ)','Пробуждение разума (КИ)','Синаптический разряд (КИ)','Удержание чудовища (КИ)','Фальшивый двойник (КИ)'];
var bard6 = ['Заданная иллюзия (КИ)','Истинное зрение (КИ)','Множественное внушение (КИ)','Неудержимая пляска Отто (КИ)','Пир героев (КИ)','Поиск пути (КИ)','Разящее око (КИ)','Стражи (КИ)'];
var bard7 = ['Великолепный особняк Морденкайнена (КИ)','Высшее воскрешение (КИ)','Знак (КИ)','Меч Морденкайнена (КИ)','Проекция (КИ)','Радужные брызги (КИ)','Регенерация (КИ)','Слово силы: укрепление (КИ)','Таинственный мираж (КИ)','Телепортация (КИ)','Узилище (КИ)','Эфирность (КИ)'];
var bard8 = ['Антипатия/симпатия (КИ)','Находчивость (КИ)','Одурманивание (КИ)','Подчинение чудовища (КИ)','Слово силы: ошеломление (КИ)','Сокрытие разума (КИ)'];
var bard9 = ['Истинное превращение (КИ)','Предвидение (КИ)','Радужная стена (КИ)','Слово силы: исцеление (КИ)','Слово силы: смерть (КИ)'];

//Не сортировано
var cleric0 = ['Указание (КИ)','Уход за умирающим (КИ)','Сопротивление (КИ)','Священное пламя (КИ)','Починка (КИ)','Свет (КИ)','Слово сияния (КИ)','Погребальный звон (КИ)','Чудотворство (КИ)'];
var cleric1 = ['Благословение (КИ)','Порча (КИ)','Приказ (КИ)','Лечение ран (КИ)','Обнаружение болезней и яда (КИ)','Обнаружение добра и зла (КИ)','Обнаружение магии (КИ)','Сотворение или уничтожение воды (КИ)','Направляющий снаряд (КИ)','Очищение пищи и питья (КИ)','Щит веры (КИ)','Защита от зла и добра (КИ)','Убежище (КИ)','Нанесение ран (КИ)','Лечащее слово (КИ)'];
var cleric2 = ['Гадание (КИ)','Глухота/слепота (КИ)','Подмога (КИ)','Умиротворение (КИ)','Вечный огонь (КИ)','Улучшение характеристики (КИ)','Нетленные останки (КИ)','Поиск ловушек (КИ)','Тишина (КИ)','Защита от яда (КИ)','Молебен лечения (КИ)','Поиск объекта (КИ)','Малое восстановление (КИ)','Удержание личности (КИ)','Охраняющая связь (КИ)','Божественное оружие (КИ)','Область истины (КИ)'];
var cleric3 = ['Аура живучести (КИ)','Восставший труп (КИ)','Маяк надежды (КИ)','Подсматривание (КИ)','Проклятие (КИ)','Дневной свет (КИ)','Рассеивание магии (КИ)','Сотворение пищи и воды (КИ)','Охранные руны (КИ)','Притворная смерть (КИ)','Магический круг (КИ)','Послание (КИ)','Разговор с мёртвыми (КИ)','Низшее воскрешение (КИ)','Снятие проклятья (КИ)','Защита от энергии (КИ)','Слияние с камнем (КИ)','Множественное лечащее слово (КИ)','Духовные стражи (КИ)','Хождение по воде (КИ)','Языки (КИ)'];
var cleric4 = ['Аура жизни (КИ)','Аура очищения (КИ)','Изгнание (КИ)','Власть над водами (КИ)','Защита от смерти (КИ)','Предсказание (КИ)','Свобода перемещения (КИ)','Страж веры (КИ)','Поиск существа (КИ)','Изменение формы камня (КИ)'];
var cleric5 = ['Круг силы (КИ)','Общение (КИ)','Заражение (КИ)','Рассеивание добра и зла (КИ)','Высшее восстановление (КИ)','Небесный огонь (КИ)','Обет (КИ)','Святилище (КИ)','Воскрешение (КИ)','Наблюдение (КИ)','Планарные узы (КИ)','Множественное лечение ран (КИ)','Нашествие насекомых (КИ)','Знание легенд (КИ)','Призыв духа небожителя (КИ)'];
var cleric6 = ['Стена клинков (КИ)','Сотворение нежити (КИ)','Запрет (КИ)','Поиск пути (КИ)','Планарный союзник (КИ)','Пир героев (КИ)','Полное исцеление (КИ)','Поражение (КИ)','Слово возврата (КИ)','Солнечный луч (КИ)','Истинное зрение (КИ)'];
var cleric7 = ['Вызов небожителя (КИ)','Божественное слово (КИ)','Огненная буря (КИ)','Высшее воскрешение (КИ)','Регенерация (КИ)','Слово силы: укрепление (КИ)','Уход в иной план (КИ)','Знак (КИ)'];
var cleric8 = ['Поле антимагии (КИ)','Власть над погодой (КИ)','Землетрясение (КИ)','Солнечный ожог (КИ)','Аура святости (КИ)'];
var cleric9 = ['Проекция в астрал (КИ)','Врата (КИ)','Слово силы: исцеление (КИ)','Множественное полное исцеление (КИ)','Истинное воскрешение (КИ)'];

var druid0 = ['Искусство друидов (КИ)','Элементализм (КИ)','Указание (КИ)','Дубинка (КИ)','Ядовитые брызги (КИ)','Уход за умирающим (КИ)','Сопротивление (КИ)','Сотворение пламени (КИ)','Починка (КИ)','Сообщение (КИ)','Терновый кнут (КИ)','Звёздный огонёк (КИ)','Раскат грома (КИ)'];
var druid1 = ['Дружба с животными (КИ)','Очарование личности (КИ)','Лечение ран (КИ)','Обнаружение болезней и яда (КИ)','Обнаружение магии (КИ)','Опутывание (КИ)','Сотворение или уничтожение воды (КИ)','Огонь фей (КИ)','Туманное облако (КИ)','Чудо-ягоды (КИ)','Очищение пищи и питья (КИ)','Защита от зла и добра (КИ)','Разговор с животными (КИ)','Скороход (КИ)','Ледяной кинжал (КИ)','Лечащее слово (КИ)','Прыжок (КИ)','Волна грома (КИ)'];
var druid2 = ['Гадание (КИ)','Дубовая кожа (КИ)','Животные чувства (КИ)','Подмога (КИ)','Вечный огонь (КИ)','Тёмное зрение (КИ)','Увеличение/уменьшение (КИ)','Улучшение характеристики (КИ)','Горящий клинок (КИ)','Поиск ловушек (КИ)','Порыв ветра (КИ)','Пылающая сфера (КИ)','Защита от яда (КИ)','Бесследное передвижение (КИ)','Лунный луч (КИ)','Поиск животных или растений (КИ)','Поиск объекта (КИ)','Малое восстановление (КИ)','Раскалённый металл (КИ)','Удержание личности (КИ)','Призыв духа зверя (КИ)','Шипастая поросль (КИ)'];
var druid3 = ['Вызов животных (КИ)','Призыв молнии (КИ)','Дневной свет (КИ)','Рассеивание магии (КИ)','Стихийное оружие (КИ)','Притворная смерть (КИ)','Низшее воскрешение (КИ)','Метель (КИ)','Рост растений (КИ)','Защита от энергии (КИ)','Слияние с камнем (КИ)','Призыв духа феи (КИ)','Стена ветра (КИ)','Хождение по воде (КИ)','Разговор с растениями (КИ)','Подводное дыхание (КИ)'];
var druid4 = ['Вызов малых элементалей (КИ)','Очарование монстра (КИ)','Смятение (КИ)','Усыхание (КИ)','Власть над водами (КИ)','Вызов лесных обитателей (КИ)','Подчинение зверя (КИ)','Предсказание (КИ)','Гигантское насекомое (КИ)','Источник лунного света (КИ)','Мираж (КИ)','Огненный щит (КИ)','Свобода перемещения (КИ)','Цепкая лоза (КИ)','Поиск существа (КИ)','Превращение (КИ)','Град (КИ)','Стена огня (КИ)','Призыв духа элементаля (КИ)','Изменение формы камня (КИ)','Каменная кожа (КИ)'];
var druid5 = ['Вызов элементаля (КИ)','Конус холода (КИ)','Общение с природой (КИ)','Преграда жизни (КИ)','Пробуждение разума (КИ)','Заражение (КИ)','Высшее восстановление (КИ)','Обет (КИ)','Наблюдение (КИ)','Реинкарнация (КИ)','Планарные узы (КИ)','Множественное лечение ран (КИ)','Нашествие насекомых (КИ)','Стена камня (КИ)','Древесный путь (КИ)'];
var druid6 = ['Вызов феи (КИ)','Окаменение (КИ)','Поиск пути (КИ)','Движение почвы (КИ)','Пир героев (КИ)','Полное исцеление (КИ)','Стена шипов (КИ)','Хождение по ветру (КИ)','Путешествие через растения (КИ)','Солнечный луч (КИ)'];
var druid7 = ['Огненная буря (КИ)','Регенерация (КИ)','Уход в иной план (КИ)','Изменение тяготения (КИ)','Таинственный мираж (КИ)','Знак (КИ)'];
var druid8 = ['Антипатия/симпатия (КИ)','Одурманивание (КИ)','Власть над погодой (КИ)','Землетрясение (КИ)','Воспламеняющаяся туча (КИ)','Цунами (КИ)','Солнечный ожог (КИ)'];
var druid9 = ['Предвидение (КИ)','Полное превращение (КИ)','Гроза гнева (КИ)','Истинное воскрешение (КИ)'];

var paladin1 = ['Благословение (КИ)','Вызов на дуэль (КИ)','Приказ (КИ)','Божественная кара (КИ)','Божественное благоволение (КИ)','Лечение ран (КИ)','Обнаружение болезней и яда (КИ)','Обнаружение добра и зла (КИ)','Обнаружение магии (КИ)','Очищение пищи и питья (КИ)','Щит веры (КИ)','Палящая кара (КИ)','Защита от зла и добра (КИ)','Героизм (КИ)','Гневная кара (КИ)','Громовая кара (КИ)'];
var paladin2 = ['Подмога (КИ)','Нетленные останки (КИ)','Поиск скакуна (КИ)','Клеймящая кара (КИ)','Защита от яда (КИ)','Молебен лечения (КИ)','Поиск объекта (КИ)','Магическое оружие (КИ)','Малое восстановление (КИ)','Охраняющая связь (КИ)','Область истины (КИ)'];
var paladin3 = ['Аура живучести (КИ)','Ослепляющая кара (КИ)','Дневной свет (КИ)','Мантия крестоносца (КИ)','Рассеивание магии (КИ)','Сотворение пищи и воды (КИ)','Стихийное оружие (КИ)','Магический круг (КИ)','Низшее воскрешение (КИ)','Снятие проклятья (КИ)'];
var paladin4 = ['Аура жизни (КИ)','Аура очищения (КИ)','Изгнание (КИ)','Защита от смерти (КИ)','Поиск существа (КИ)','Оглушающая кара (КИ)'];
var paladin5 = ['Изгоняющая кара (КИ)','Круг силы (КИ)','Разрушительная волна (КИ)','Рассеивание добра и зла (КИ)','Высшее восстановление (КИ)','Обет (КИ)','Воскрешение (КИ)','Призыв духа небожителя (КИ)'];

var ranger1 = ['Дружба с животными (КИ)','Сигнал тревоги (КИ)','Лечение ран (КИ)','Обнаружение болезней и яда (КИ)','Обнаружение магии (КИ)','Опутывание (КИ)','Опутывающий удар (КИ)','Град шипов (КИ)','Туманное облако (КИ)','Чудо-ягоды (КИ)','Разговор с животными (КИ)','Скороход (КИ)','Метка охотника (КИ)','Прыжок (КИ)'];
var ranger2 = ['Дубовая кожа (КИ)','Животные чувства (КИ)','Подмога (КИ)','Завеса стрел (КИ)','Тёмное зрение (КИ)','Улучшение характеристики (КИ)','Поиск ловушек (КИ)','Порыв ветра (КИ)','Тишина (КИ)','Защита от яда (КИ)','Бесследное передвижение (КИ)','Поиск животных или растений (КИ)','Поиск объекта (КИ)','Магическое оружие (КИ)','Малое восстановление (КИ)','Призыв духа зверя (КИ)','Шипастая поросль (КИ)'];
var ranger3 = ['Вызов животных (КИ)','Вызов заграждения (КИ)','Дневной свет (КИ)','Рассеивание магии (КИ)','Стихийное оружие (КИ)','Низшее воскрешение (КИ)','Рост растений (КИ)','Необнаружимость (КИ)','Защита от энергии (КИ)','Слияние с камнем (КИ)','Молниевая стрела (КИ)','Призыв духа феи (КИ)','Стена ветра (КИ)','Хождение по воде (КИ)','Разговор с растениями (КИ)','Подводное дыхание (КИ)'];
var ranger4 = ['Вызов лесных обитателей (КИ)','Подчинение зверя (КИ)','Свобода перемещения (КИ)','Цепкая лоза (КИ)','Поиск существа (КИ)','Призыв духа элементаля (КИ)','Каменная кожа (КИ)'];
var ranger5 = ['Общение с природой (КИ)','Вызов залпа (КИ)','Высшее восстановление (КИ)','Древесный путь (КИ)','Удар стального ветра (КИ)','Быстрый колчан (КИ)'];

var sorcerer0 = ['Брызги кислоты (КИ)','Защита от оружия (КИ)','Могильное прикосновение (КИ)','Пляшущие огоньки (КИ)','Элементализм (КИ)','Дружба (КИ)','Огненный снаряд (КИ)','чародейская вспышка (КИ)','Электрошок (КИ)','Ядовитые брызги (КИ)','Луч холода (КИ)','Фокусы (КИ)','Малая иллюзия (КИ)','Расщепление разума (КИ)','Починка (КИ)','Волшебная рука (КИ)','Сообщение (КИ)','Свет (КИ)','Меткий удар (КИ)','Раскат грома (КИ)'];
var sorcerer1 = ['Огненные ладони (КИ)','Очарование личности (КИ)','Понимание языков (КИ)','Сверкающие брызги (КИ)','Цветной шарик (КИ)','Маскировка (КИ)','Обнаружение магии (КИ)','Падение пёрышком (КИ)','Поспешное отступление (КИ)','Псевдожизнь (КИ)','Скольжение (КИ)','Туманное облако (КИ)','Щит (КИ)','Безмолвный образ (КИ)','Усыпление (КИ)','Луч болезни (КИ)','Доспехи мага (КИ)','Волшебная стрела (КИ)','Ледяной кинжал (КИ)','Прыжок (КИ)','Ведьмин снаряд (КИ)','Волна грома (КИ)'];
var sorcerer2 = ['Глухота/слепота (КИ)','Магическое здоровье (КИ)','Облако кинжалов (КИ)','Почтовое животное (КИ)','Размытый образ (КИ)','Смена обличья (КИ)','Дыхание дракона (КИ)','Корона безумия (КИ)','Обнаружение мыслей (КИ)','Тьма (КИ)','Тёмное зрение (КИ)','Увеличение/уменьшение (КИ)','Улучшение характеристики (КИ)','Горящий клинок (КИ)','Порыв ветра (КИ)','Пылающая сфера (КИ)','Дребезги (КИ)','Видение невидимого (КИ)','Палящий луч (КИ)','Воображаемая сила (КИ)','Туманный шаг (КИ)','Отражения (КИ)','Пронзание разума (КИ)','Левитация (КИ)','Магическое оружие (КИ)','Стук (КИ)','Невидимость (КИ)','Удержание личности (КИ)','Паутина (КИ)','Внушение (КИ)','Паук (КИ)'];
var sorcerer3 = ['Мерцание (КИ)','Подсматривание (КИ)','Дневной свет (КИ)','Контрзаклинание (КИ)','Рассеивание магии (КИ)','Газообразная форма (КИ)','Огненный шар (КИ)','Полёт (КИ)','Ужас (КИ)','Замедление (КИ)','Метель (КИ)','Защита от энергии (КИ)','Образ (КИ)','Молния (КИ)','Гипнотический узор (КИ)','Ускорение (КИ)','Хождение по воде (КИ)','Прикосновение вампира (КИ)','Подводное дыхание (КИ)','Зловонное облако (КИ)','Языки (КИ)'];
var sorcerer4 = ['Изгнание (КИ)','Очарование монстра (КИ)','Смятение (КИ)','Усыхание (КИ)','Переносящая дверь (КИ)','Подчинение зверя (КИ)','Высшая невидимость (КИ)','Огненный щит (КИ)','Превращение (КИ)','Град (КИ)','Стена огня (КИ)','Едкий шар (КИ)','Каменная кожа (КИ)'];
var sorcerer5 = ['Длань Бигби (КИ)','Конус холода (КИ)','Облако смерти (КИ)','Оживление вещей (КИ)','Подчинение личности (КИ)','Сотворение (КИ)','Притворство (КИ)','Нашествие насекомых (КИ)','Удержание чудовища (КИ)','Стена камня (КИ)','Телекинез (КИ)','Круг телепортации (КИ)','Синаптический разряд (КИ)'];
var sorcerer6 = ['Круг смерти (КИ)','Магические врата (КИ)','Цепная молния (КИ)','Распад (КИ)','Окаменение (КИ)','Разящее око (КИ)','Сфера неуязвимости (КИ)','Отилюков ледяной шар (КИ)','Движение почвы (КИ)','Множественное внушение (КИ)','Солнечный луч (КИ)','Истинное зрение (КИ)'];
var sorcerer7 = ['Замедленный огненный шар (КИ)','Огненная буря (КИ)','Перст смерти (КИ)','Радужные брызги (КИ)','Уход в иной план (КИ)','Изменение тяготения (КИ)','Телепортация (КИ)'];
var sorcerer8 = ['Превращение в животных (КИ)','Демиплан (КИ)','Землетрясение (КИ)','Подчинение чудовища (КИ)','Слово силы: ошеломление (КИ)','Воспламеняющаяся туча (КИ)','Солнечный ожог (КИ)'];
var sorcerer9 = ['Врата (КИ)','Метеоритный дождь (КИ)','Слово силы: смерть (КИ)','Желание (КИ)','Остановка времени (КИ)'];


var warlock0 = ['Защита от оружия (КИ)','Могильное прикосновение (КИ)','Мистический заряд (КИ)','Дружба (КИ)','Ядовитые брызги (КИ)','Фокусы (КИ)','Малая иллюзия (КИ)','Расщепление разума (КИ)','Волшебная рука (КИ)','Погребальный звон (КИ)','Меткий удар (КИ)','Раскат грома (КИ)'];
var warlock1 = ['Доспех Агатиса (КИ)','Очарование личности (КИ)','Понимание языков (КИ)','Порча (КИ)','Руки Хадара (КИ)','Обнаружение магии (КИ)','Поспешное отступление (КИ)','Защита от зла и добра (КИ)','Разговор с животными (КИ)','Невидимое письмо (КИ)','Сглаз (КИ)','Адское возмездие (КИ)','Ведьмин снаряд (КИ)','Невидимый слуга (КИ)','Жуткий смех Таши (КИ)'];
var warlock2 = ['Облако кинжалов (КИ)','Корона безумия (КИ)','Речь златоуста (КИ)','Тьма (КИ)','Луч слабости (КИ)','Туманный шаг (КИ)','Отражения (КИ)','Пронзание разума (КИ)','Невидимость (КИ)','Удержание личности (КИ)','Внушение (КИ)','Паук (КИ)'];
var warlock3 = ['Контрзаклинание (КИ)','Рассеивание магии (КИ)','Газообразная форма (КИ)','Полёт (КИ)','Магический круг (КИ)','Ужас (КИ)','Снятие проклятья (КИ)','Образ (КИ)','Голод Хадара (КИ)','Гипнотический узор (КИ)','Призыв духа феи (КИ)','Призыв духа нежити (КИ)','Прикосновение вампира (КИ)','Языки (КИ)'];
var warlock4 = ['Изгнание (КИ)','Очарование монстра (КИ)','Усыхание (КИ)','Переносящая дверь (КИ)','Мираж (КИ)','Призыв духа аберрации (КИ)'];
var warlock5 = ['Вещий сон (КИ)','Связь с иным планом (КИ)','Наблюдение (КИ)','Планарные узы (КИ)','Фальшивый двойник (КИ)','Шторм излучения Джалларзи (КИ)','Удержание чудовища (КИ)','Круг телепортации (КИ)','Синаптический разряд (КИ)'];
var warlock6 = ['Круг смерти (КИ)','Магические врата (КИ)','Сотворение нежити (КИ)','Разящее око (КИ)','Призыв духа исчадия (КИ)','Булькающий котёл Таши (КИ)','Истинное зрение (КИ)'];
var warlock7 = ['Эфирность (КИ)','Перст смерти (КИ)','Узилище (КИ)','Уход в иной план (КИ)'];
var warlock8 = ['Одурманивание (КИ)','Демиплан (КИ)','Подчинение чудовища (КИ)','Находчивость (КИ)','Слово силы: ошеломление (КИ)'];
var warlock9 = ['Проекция в астрал (КИ)','Врата (КИ)','Предвидение (КИ)','Заточение (КИ)','Слово силы: смерть (КИ)','Истинное превращение (КИ)','Жуть (КИ)'];


var wizard0 = ['Брызги кислоты (КИ)','Защита от оружия (КИ)','Могильное прикосновение (КИ)','Пляшущие огоньки (КИ)','Элементализм (КИ)','Дружба (КИ)','Огненный снаряд (КИ)','Электрошок (КИ)','Ядовитые брызги (КИ)','Луч холода (КИ)','Фокусы (КИ)','Малая иллюзия (КИ)','Расщепление разума (КИ)','Починка (КИ)','Волшебная рука (КИ)','Сообщение (КИ)','Свет (КИ)','Погребальный звон (КИ)','Меткий удар (КИ)','Раскат грома (КИ)'];
var wizard1 = ['Огненные ладони (КИ)','Очарование личности (КИ)','Понимание языков (КИ)','Сверкающие брызги (КИ)','Сигнал тревоги (КИ)','Цветной шарик (КИ)','Маскировка (КИ)','Обнаружение магии (КИ)','Падение пёрышком (КИ)','Поиск фамильяра (КИ)','Поспешное отступление (КИ)','Псевдожизнь (КИ)','Скольжение (КИ)','Туманное облако (КИ)','Щит (КИ)','Безмолвный образ (КИ)','Усыпление (КИ)','Защита от зла и добра (КИ)','Скороход (КИ)','Луч болезни (КИ)','Доспехи мага (КИ)','Опознание (КИ)','Волшебная стрела (КИ)','Ледяной кинжал (КИ)','Невидимое письмо (КИ)','Прыжок (КИ)','Ведьмин снаряд (КИ)','Волна грома (КИ)','Невидимый слуга (КИ)','Тензеров парящий диск (КИ)','Жуткий смех Таши (КИ)'];
var wizard2 = ['Волшебный замок (КИ)','Гадание (КИ)','Глухота/слепота (КИ)','Магическое здоровье (КИ)','Облако кинжалов (КИ)','Почтовое животное (КИ)','Размытый образ (КИ)','Смена обличья (КИ)','Вечный огонь (КИ)','Дыхание дракона (КИ)','Корона безумия (КИ)','Обнаружение мыслей (КИ)','Тьма (КИ)','Тёмное зрение (КИ)','Увеличение/уменьшение (КИ)','Улучшение характеристики (КИ)','Нетленные останки (КИ)','Порыв ветра (КИ)','Пылающая сфера (КИ)','Дребезги (КИ)','Трюк с верёвкой (КИ)','Видение невидимого (КИ)','Палящий луч (КИ)','Луч слабости (КИ)','Нистулова ложная магия (КИ)','Воображаемая сила (КИ)','Волшебные уста (КИ)','Туманный шаг (КИ)','Отражения (КИ)','Пронзание разума (КИ)','Мельфова кислотная стрела (КИ)','Поиск объекта (КИ)','Левитация (КИ)','Магическое оружие (КИ)','Стук (КИ)','Невидимость (КИ)','Удержание личности (КИ)','Паутина (КИ)','Внушение (КИ)','Паук (КИ)'];
var wizard3 = ['Восставший труп (КИ)','Мерцание (КИ)','Подсматривание (КИ)','Проклятие (КИ)','Контрзаклинание (КИ)','Рассеивание магии (КИ)','Газообразная форма (КИ)','Огненный шар (КИ)','Охранные руны (КИ)','Полёт (КИ)','Притворная смерть (КИ)','Магический круг (КИ)','Ужас (КИ)','Послание (КИ)','Разговор с мёртвыми (КИ)','Замедление (КИ)','Метель (КИ)','Снятие проклятья (КИ)','Призрачный скакун (КИ)','Необнаружимость (КИ)','Защита от энергии (КИ)','Образ (КИ)','Молния (КИ)','Леомундова хижина (КИ)','Гипнотический узор (КИ)','Ускорение (КИ)','Призыв духа феи (КИ)','Призыв духа нежити (КИ)','Прикосновение вампира (КИ)','Подводное дыхание (КИ)','Зловонное облако (КИ)','Языки (КИ)'];
var wizard4 = ['Вызов малых элементалей (КИ)','Изгнание (КИ)','Магический глаз (КИ)','Очарование монстра (КИ)','Смятение (КИ)','Усыхание (КИ)','Власть над водами (КИ)','Переносящая дверь (КИ)','Предсказание (КИ)','Изготовление (КИ)','Высшая невидимость (КИ)','Мираж (КИ)','Огненный щит (КИ)','Эвардовы чёрные щупальца (КИ)','Поиск существа (КИ)','Превращение (КИ)','Воображаемый убийца (КИ)','Кабинет Морденкайнена (КИ)','Отилюков упругий шар (КИ)','Верный пёс Морденкайнена (КИ)','Леомундов потайной сундук (КИ)','Град (КИ)','Стена огня (КИ)','Призыв духа аберрации (КИ)','Призыв духа конструкта (КИ)','Призыв духа элементаля (КИ)','Едкий шар (КИ)','Изменение формы камня (КИ)','Каменная кожа (КИ)'];
var wizard5 = ['Вызов элементаля (КИ)','Длань Бигби (КИ)','Конус холода (КИ)','Круг силы (КИ)','Облако смерти (КИ)','Оживление вещей (КИ)','Вещий сон (КИ)','Подчинение личности (КИ)','Связь с иным планом (КИ)','Сотворение (КИ)','Обет (КИ)','Притворство (КИ)','Наблюдение (КИ)','Планарные узы (КИ)','Создание прохода (КИ)','Ментальная связь Рэри (КИ)','Изменение памяти (КИ)','Фальшивый двойник (КИ)','Шторм излучения Джалларзи (КИ)','Знание легенд (КИ)','Удержание чудовища (КИ)','Призыв духа дракона (КИ)','Стена камня (КИ)','Телекинез (КИ)','Стена силы (КИ)','Круг телепортации (КИ)','Королевское величие Йоланды (КИ)','Синаптический разряд (КИ)','Удар стального ветра (КИ)'];
var wizard6 = ['Круг смерти (КИ)','Магические врата (КИ)','Цепная молния (КИ)','Дромиджево появление (КИ)','Предосторожность (КИ)','Распад (КИ)','Сотворение нежити (КИ)','Окаменение (КИ)','Разящее око (КИ)','Стражи (КИ)','Сфера неуязвимости (КИ)','Неудержимая пляска Отто (КИ)','Заданная иллюзия (КИ)','Отилюков ледяной шар (КИ)','Движение почвы (КИ)','Волшебный сосуд (КИ)','Множественное внушение (КИ)','Призыв духа исчадия (КИ)','Стена льда (КИ)','Булькающий котёл Таши (КИ)','Солнечный луч (КИ)','Истинное зрение (КИ)'];
var wizard7 = ['Замедленный огненный шар (КИ)','Перст смерти (КИ)','Узилище (КИ)','Подобие (КИ)','Изоляция (КИ)','Радужные брызги (КИ)','Проекция (КИ)','Уход в иной план (КИ)','Изменение тяготения (КИ)','Меч Морденкайнена (КИ)','Великолепный особняк Морденкайнена (КИ)','Таинственный мираж (КИ)','Телепортация (КИ)','Знак (КИ)'];
var wizard8 = ['Антипатия/симпатия (КИ)','Двойник (КИ)','Одурманивание (КИ)','Превращение в животных (КИ)','Поле антимагии (КИ)','Власть над погодой (КИ)','Демиплан (КИ)','Подчинение чудовища (КИ)','Слово силы: ошеломление (КИ)','Лабиринт (КИ)','Сокрытие разума (КИ)','Воспламеняющаяся туча (КИ)','Телепатия (КИ)','Солнечный ожог (КИ)'];
var wizard9 = ['Проекция в астрал (КИ)','Врата (КИ)','Предвидение (КИ)','Радужная стена (КИ)','Полное превращение (КИ)','Заточение (КИ)','Метеоритный дождь (КИ)','Слово силы: смерть (КИ)','Желание (КИ)','Истинное превращение (КИ)','Остановка времени (КИ)','Жуть (КИ)'];

var source_check = [];
// only strings
//Переменная в которой будем искать уровень спелла
var h3 = document.getElementsByTagName('h3')
//Вспомогательная переменная для определение уровня спелла
var l

//Переменная для вывода номера ролла в результатах
var roll_number = 1

//объявленные переменные для куков спеллов
var arr0 = [];
var arr1 = [];
var arr2 = [];
var arr3 = [];
var arr4 = [];
var arr5 = [];
var arr6 = [];
var arr7 = [];
var arr8 = [];
var arr9 = [];

//Переменная с текущим набором кубов [d4,d6,d8,d10,d12,d20]
var dDice = [4,6,8,10,12,20]
var dice_array = [0,0,0,0,0,0];

//объявленные переменные для куков дайсов
var dice_arr0 = [];
var dice_arr1 = [];
var dice_arr2 = [];
var dice_arr3 = [];
var dice_arr4 = [];
var dice_arr5 = [];

//Cохраненные ролы
var favouriteroll0
var favouriteroll1
var favouriteroll2
var favouriteroll3
var favouriteroll4
var favouriteroll5


var json_str = [];
//Сердечки
var favourite = document.getElementsByClassName('favourite');



//Загрузка страницы получение куков


/*Перерисовка при смене ориентации*/
window.addEventListener("orientationchange", function() {
  ChangeClass(class_name);
}, false);


function addFavourite(heart) {

  //Запихиваем в избранное

  //Внутри тега h3 проставлены уровни спеллов и школы
  //Берем в иннерхтмле только первый символ
  //Это и будет уровнем.
  //Если 'З' / заговор - то уровень 0-й
  //eval('arr'+l) - эквивален одного из 10 имен массивов arr
  if ((h3[heart.id].innerHTML[0] == 'З') || (h3[heart.id].innerHTML[0] == 'з')) {
    var l = 0;
  } else {
    var l = h3[heart.id].innerHTML[0].toString();
  }


  //Проверяем какое сердце жмем. При пустом заполняем массив, при полном удаляем
  if (heart.src.match("img/heart.png")) {
    eval('arr' + l).push(spellname[heart.id].innerHTML);

    heart.src = 'img/heartfull.png'
    //Избранное
  } else {
    eval('arr' + l).splice([(eval('arr' + l).indexOf(spellname[heart.id].innerHTML))], 1)
    heart.src = 'img/heart.png'
  }

  json_str = JSON.stringify(eval('arr' + l));
  createCookie('favourite' + l, json_str, 365);

}


//Функция создания печенек
function createCookie(name, value, days) {
  var expires;
  if (days) {
    var date = new Date();
    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
    expires = "; expires=" + date.toGMTString();
  } else {
    expires = "";
  }
  document.cookie = name + "=" + value + expires + "; path=/";
}

//Функция получения печенек
function getCookie(c_name) {
  if (document.cookie.length > 0) {
    c_start = document.cookie.indexOf(c_name + "=");
    if (c_start != -1) {
      c_start = c_start + c_name.length + 1;
      c_end = document.cookie.indexOf(";", c_start);
      if (c_end == -1) {
        c_end = document.cookie.length;
      }
      return unescape(document.cookie.substring(c_start, c_end));
    }
  }
  return "";
}




/*ПОЖАЛУЙСТА ПОФИКСИТЕ ЭТО*/
/*Скрытие лайт бокса. */
function hidelight() {
    if (check != 1)
    {
    document.getElementById('lightbox').style.display='none'
    if (found.length > 0)
    	{
    		//for (var i=0; i<found.length; i++) {
    		//des[found[i]].innerHTML = des[found[i]].innerHTML.replace(/<span>/g, '');
			//}
    		found = [];
    	}

    }
    else
    {
        check = 0
    }
}


/*И ЭТО. Клик на диве идет сквозь элемент. Для закрытия по клику за пределом описания. При клике на описание, клик проходит сквозь див, но это кастыль это фиксит*/
function showlight() {
    check = 1
}



function openSearch() {
  document.getElementById("inputform").style.display = "block";
  document.getElementById("searchbook").style.display = "block";
  document.getElementById("main").style.display = "none";
  document.getElementById("searchform").style.display = "none";
  current_display_spell = "Nothing"
}

function openBook() {
  document.getElementById("inputform").style.display = "none";
  document.getElementById("searchbook").style.display = "none";
  document.getElementById("main").style.display = "block";
  document.getElementById("searchform").style.display = "block";
  document.getElementById("nothing").style.display = "none";
}

function openNav() {
  document.getElementById("navigation").style.width = "100%";
}

function closeNav() {
  document.getElementById("navigation").style.width = "0%";
}

function openDicePad() {
  document.getElementById("dicepad").style.width = "100%";
}

function closeDicePad() {
  document.getElementById("dicepad").style.width = "0%";
}

function openSet() {
  document.getElementById("settings").style.width = "100%";

}

function closeSet() {
  document.getElementById("settings").style.width = "0%";
  source_check = [];
  for (i = 0; i < source_class.length; i++) {
    if (source_class[i].checked) {
      source_check.push(source_class[i].value);
    }
  }
  json_str = JSON.stringify(source_check);
  createCookie('storedsource', json_str, 30);
  //localStorage['storedsource'] = source_check
  //for (i = 0; i < source_class.length; i++) {
  //  sourcep_class[i].checked = source_class[i].checked
  //}
  ChangeClass(class_name);
}

function addDice(dice) {
		dice_array[dice]+=1
		var pad = '<p>';
		for (i = 0; i < dice_array.length; i++) {
		if (dice_array[i]>0)
			{
				//В конце 3 нерастяжимых пробела для отбивки
			pad += '<span>'+dice_array[i]+'</span><img onclick="removeDice('+i+')" ontouch="removeDice('+i+')" src="img/d'+dDice[i]+'.png"/>'+'&nbsp;&nbsp;&nbsp;'
			}

		}
		pad += '</p>';
		document.getElementById('roll').innerHTML = pad
}

function removeDice(dice) {
	//dice_array.indexOf(dice) искомый куб для удаления
	//dice_array.splice(dice_array.indexOf(dice),1) начиная с позиции дайс эррей удалить один элемент
	//dice_array.splice(dice_array.indexOf(dice), 1)
	dice_array[dice]-=1
		var pad = '<p>';
		for (i = 0; i < dice_array.length; i++) {
		if (dice_array[i]>0)
			{
			pad += '<span>'+dice_array[i]+'</span><img onclick="removeDice('+i+')" ontouch="removeDice('+i+')" src="img/d'+dDice[i]+'.png"/>'+'&nbsp;&nbsp;&nbsp;'
			}

		}
		pad += '</p>';
		document.getElementById('roll').innerHTML = pad
}

function roll()
{
	//Переменная для количества рольнутых дайсов после суммы
	var dice_rolled = '';
	//Суммарный результат ролла
	var result = 0;
	//Результирующая строка, которая добавляется в лог
	var result_string = roll_number + '. ';
//В массиве записывается количество дайсов. 4-ка в нулевом элементе, 6-ка в первом и т.д.
	for (i=0; i<dice_array.length; i++) {
		if (dice_array[i]>0)
		{
			dice_rolled += dice_array[i]+'к'+dDice[i]+' ';
		}
		for (j=0; j<dice_array[i]; j++) 
       	{
       		single_roll = Math.floor((Math.random() * dDice[i]) + 1);	
       		result += single_roll	
	   		result_string += single_roll.toString()+'[d'+ dDice[i] +'] '+', ';
	   	}
  	}
  	result_string += ' Суммарно <span style="color:orange">' + result + '</span>' + ' [' + dice_rolled + ']';
  	document.getElementById('result').innerHTML = '<p color="#000000">' + result_string + '</p>\n' + document.getElementById('result').innerHTML
roll_number++
console.log(dice_rolled)
}

function saveRoll() {
var preset_string = '';
 //Проверяем переменные пресетов dice_arr от 0 до 5. Находим среди них первый пустой и пушим туда элементы из текущего массиво по одному 
 for (i=0; i<6; i++)
 {
 	if (eval('dice_arr'+i).length == 0)
 	{
 		preset_string +='<span style="color:orange">'+(i+1)+'.</span> ';
 		for (j=0; j<dice_array.length; j++) {
 		eval('dice_arr'+i).push(dice_array[j]);
		//Формирование строки, которая уйдет в пресет. Если элемент не пустой в строку добавится количество дайсов и кDice
			if (dice_array[j]>0)
			{
			preset_string +=dice_array[j]+'к'+dDice[j]+'    ' 
			}	

 		}
 	document.getElementsByClassName('preset')[i].innerHTML = preset_string;
 	json_str = JSON.stringify(dice_array);
	createCookie('favouriteroll' + i, json_str, 365);
 	break
 	}
 
	 	 
 }


				
}



function loadRoll(preset) {
	//Загружаем массив и бахаем
	dice_array = [];
	//dDice.length - длина 6, надо бы использовать dice_array, но он зануляется. а он всегда 6, и если я таки добавлю д100
	for (j=0; j<dDice.length; j++) {
 		dice_array.push(eval('dice_arr'+preset)[j]);
 	}
		//Формирование строки, которая уйдет в пресет. Если элемент не пустой в строку добавится количество дайсов и кDice
		


	document.getElementById('roll').innerHTML = '';
	//Микрокастыль для перерисования роляемых дайсов
	addDice(0);
	removeDice(0);
	roll()
}
function deleteRoll() {
//Выбираем пресет для удаления и делаем -1 для соотвествия массиву.
var preset = Number(prompt('Выберите пресет для удаления?', 1)-1);
//Зануляем длину массива, что приводит его в виду пустого массива [];
eval('dice_arr'+preset).length=0;
json_str = JSON.stringify(eval('dice_arr'+preset));
createCookie('favouriteroll' + preset, json_str, 365);
//Прибавляем 1, чтобы нормально отрисовывалось
document.getElementsByClassName('preset')[preset].innerHTML = '<span style="color:orange">'+(preset+1)+'</span>'+'. Пусто    ';
}

function eraseLog() {
document.getElementById('result').innerHTML ='';
}

function pageload() {

  current_display_table = document.getElementById(class_name + level_number + 'Table');
  current_display_class = document.getElementById(class_name);
  document.getElementsByClassName('overlay-content')[0].innerHTML = table_of_contents;


  //Чтение выделенных сурсов. При первом открытии или открытии локально будет пустым и забьется дефолтным ксанатаром и КИ
  json_str = getCookie('storedsource');
  if ((json_str == undefined) || (json_str == "")) {
    source_check = ["КИ"]
  } else {
    source_check = JSON.parse(json_str)
  }


  //Вспоминалка источников, проставляет галочки в настройках
  for (i = 0; i < source_class.length; i++) {

    if (source_check.indexOf(source_class[i].value) >= 0) {
      source_class[i].checked = 1
    //  sourcep_class[i].checked = 1
    } else {
      source_class[i].checked = 0
    //  sourcep_class[i].checked = 0
    }

  }
  //Но посколько храним мы строку, а работаем дальше с массивом, давайте-ка обнулим строку нахуй и построем массив еще раз, чтобы было заебись.
  source_check = [];
  for (i = 0; i < source_class.length; i++) {
    if (source_class[i].checked) {
      source_check.push(source_class[i].value);
    }
  }


//Получения массива из куков для роллов
for (i = 0; i < 6; i++) {
    json_str = getCookie('favouriteroll' + i);
	var preset_string = '';
	preset_string +='<span style="color:orange">'+(i+1)+'.</span> ';
	//Временная строка. Т.к. длина json_str без парса 13, а с парсом и вообще должна быть 6
	
	
	//Проверка, что в куках что-то есть.
	if (json_str != "")
	{
	str=JSON.parse(json_str);
		     if (i == 0) {
			      dice_arr0 = str || [];
			 } else if (i == 1) {
			      dice_arr1 = str || [];
			 } else if (i == 2) {
			      dice_arr2 = str || [];
			 } else if (i == 3) {
			      dice_arr3 = str || [];
			 } else if (i == 4) {
			      dice_arr4 = str || [];
			 } else if (i == 5) {
			      dice_arr5 = str || [];
			 }
    //Запихиваем в соотвествующий массив то, что достали из куков
    	for (j=0; j<str.length; j++)
    	{	

    		if (str[j]>0)
			{
			preset_string +=str[j]+'к'+dDice[j]+' ' 
			}

    	}
    	
 	document.getElementsByClassName('preset')[i].innerHTML = preset_string;
	}
}

//Получение массива для спеллов из куков
  for (n = 0; n < 10; n++) {
    json_str = getCookie('favourite' + n);

//Проверка, что в куках что-то есть.
if (json_str != "")
{
    //Охуительный кастыль, потому что eval('arr'+n)=JSON.parse(json_str) не работает ни с равно, ни с конкатом
    if (n == 0) {
      arr0 = JSON.parse(json_str) || [];
    } else if (n == 1) {
      arr1 = JSON.parse(json_str) || [];
    } else if (n == 2) {
      arr2 = JSON.parse(json_str) || [];
    } else if (n == 3) {
      arr3 = JSON.parse(json_str) || [];
    } else if (n == 4) {
      arr4 = JSON.parse(json_str) || [];
    } else if (n == 5) {
      arr5 = JSON.parse(json_str) || [];
    } else if (n == 6) {
      arr6 = JSON.parse(json_str) || [];
    } else if (n == 7) {
      arr7 = JSON.parse(json_str) || [];
    } else if (n == 8) {
      arr8 = JSON.parse(json_str) || [];
    } else {
      arr9 = JSON.parse(json_str) || [];
    }
}


    //Проставляем сердечки. Просматриваем массив arr и ищем его в массиве спеллнеймов
    for (i = 0; i < eval('arr' + n).length; i++) {
      for (j = 0; j < spellname.length; j++) {
        if (eval('arr' + n)[i] == spellname[j].innerHTML) {
          favourite[j].src = 'img/heartfull.png'
        }
      }
    }
  }
  //

  tmp = document.URL.split('#')
  spell = decodeURI(tmp[1])
  if (spell == 'undefined')
  {
   
  }
  else
  {
  Search(spell);
  }


}

//Выключено
function mouseStart()
{

    var e = window.event;
    startX = e.clientX;
    startY = e.clientY;

}
//Выключено
function mouseEnd()
{
//Берем координаты при начале перетягивания
    var e = window.event;
    endX = e.clientX;
    endY = e.clientY;
//Вычисляем разницу, по которой будем определять куда тянули страницу
var diffX = startX - endX;
var diffY = startY - endY;


if ((Math.abs(diffX) > Math.abs(diffY)) && (Math.abs(diffX) >= 50) && current_display_spell != "Nothing")
{
	for (i=0; i < draw_table_swipe.length; i++) 
	{
			if (draw_table_swipe[i] == current_display_spell)
			{
				j = i
			}

	}
	if 	(diffX > 0)
		{
			
			if (j == draw_table_swipe.length-1)
			{
				j=0
			}
			else
			{
				j++
			}
			Search(draw_table_swipe[j]);


		}
	else if (diffX < 0)
		{
			if (j == 0)
			{
				j=draw_table_swipe.length-1
			}
			else
			{
				j--
			}
			Search(draw_table_swipe[j]);


		}
}
else
{
	
}


}


//Берем координаты при начале перетягивания
function touchStart()
{

    var e = window.event;
    startX = e.touches[0].clientX;
    startY = e.touches[0].clientY;
    console.log(startX)
    console.log(startY)

}

function touchEnd()
{
//Берем координаты при начале перетягивания
    var e = window.event;
    endX = e.changedTouches[0].clientX;
    endY = e.changedTouches[0].clientY;
//Вычисляем разницу, по которой будем определять куда тянули страницу
var diffX = startX - endX;
var diffY = startY - endY;


if ((Math.abs(diffX) > Math.abs(diffY)) && (Math.abs(diffX) >= 50) && current_display_spell != "Nothing")
{
	for (i=0; i < draw_table_swipe.length; i++) 
	{
			if (draw_table_swipe[i] == current_display_spell)
			{
				j = i
			}

	}
	if 	(diffX > 0)
		{
			
			if (j == draw_table_swipe.length-1)
			{
				j=0
			}
			else
			{
				j++
			}
			Search(draw_table_swipe[j]);


		}
	else if (diffX < 0)
		{
			if (j == 0)
			{
				j=draw_table_swipe.length-1
			}
			else
			{
				j--
			}
			Search(draw_table_swipe[j]);


		}
}
else if (diffY >= 50)
{
	preventDefault();
}


}

function Content(id) {
  if (suggestion.style.display == 'block') {
    suggestion.style.display = 'none';
  } else {
    suggestion.style.display = 'block';
  }

}

function ChangeClass(classus) {
  current_display_class.style.backgroundColor = 'white';
  current_display_class = document.getElementById(classus)



if (classus == 'arr')
{
	ChangeFavourite();
}


else
{


  if (classus == 'paladin' || classus == 'ranger' || classus == 'artificer') {

    if (Number(level_number) > 5) {
      level_number = '5';

    } else if (Number(level_number) == 0) {
      level_number = '1';
    }
  } else {

  }
  class_name = classus;
  ChangeLevel(level_number);
}

}


function ChangeFavourite()
{
  current_display_class.style.backgroundColor = 'orange';
  document.getElementById('long19').style.display = 'none';
  document.getElementById('shrt15').style.display = 'none'; 
  document.getElementById('long15').style.display = 'none'; 
  //var arr10 = arr0.concat(arr1, arr2, arr3, arr4, arr5, arr6, arr7, arr8, arr9);
  //console.log(arr10);
  var content = '<div class="TableBody">'
  draw_table_swipe = [];
  draw_table = [];
  draw_table2 = [];
  class_name='arr';

for (b = 0; b < 10; b++) {

if (eval(class_name + b).length > 0)
{
  if (b == 0) {
  	content += '<h4>Заговоры</h4><div class="TableRow">';
  } 
  else {
  	content += '<h4>' + b + ' Круг</h4><div class="TableRow">';
  }
  for (i = 0; i < eval(class_name + b).length; i++) {
    for (j = 0; j < source_check.length; j++) {
      if (eval(class_name + b)[i].indexOf(source_check[j]) >= 0) {
        if (draw_table[draw_table.length - 1] != eval(class_name + b)[i]) {
          draw_table.push(eval(class_name + b)[i]);
          draw_table_swipe.push(eval(class_name + b)[i]);
        }
      }
    }
  }


 var port = window.matchMedia('(max-device-width : 1920px)');
  if (port.matches) {
    var n = 3
  } else {
    var n = 4
  }
  /*Ебанутая хуйня*/


  var rows = Math.floor(draw_table.length / n)
  var ostatok = draw_table.length % n
  for (i = 1; i <= ostatok; i++) {
    draw_table2.push(draw_table[(rows + 1) * i - 1]);
  }

  for (i = 0; i < draw_table2.length; i++) {
    draw_table.splice(draw_table.indexOf(draw_table2[i]), 1);
  }

  var k = 0
  var l = k
  for (i = 0; i < rows; i++) {

    for (j = 0; j < n; j++) {
      if (l < draw_table.length) {
        content += '<div class="TableCell2" onclick=Search(this.innerHTML) ontouch=Search(this.innerHTML)>' + draw_table[l] + '</div>';
        l = l + rows
      }

    }
    content += '</div><div class="TableRow">';
    k = k + 1
    var l = k
  }

  for (i = 0; i < draw_table2.length; i++) {
    content += '<div class="TableCell2" onclick=Search(this.innerHTML) ontouch=Search(this.innerHTML)>' + draw_table2[i] + '</div>';
  }
 var draw_table = [];
 var draw_table2 = [];


 content += '</div>';

}
}

  content += '</div><div class="TableRow">';
  /*Ебанутая хуйня*/

  //Отрисовка по строкам.
  //for(i=0; i<draw_table.length; i++){
  //   if ((i+1) % n == 0) {
  //  		content += '<div class="TableCell2" onclick=Search(this.innerHTML) ontouch=Search(this.innerHTML)>' + draw_table[i] + '</div></div><div class="TableRow">';
  //  	}
  //  	else {
  //  		content += '<div class="TableCell2" onclick=Search(this.innerHTML) ontouch=Search(this.innerHTML)>' + draw_table[i] + '</div>';
  //  	}
  //}

  content += '</div></div>'

  document.getElementById('table').innerHTML = content



}



function ChangeLevel(levelus) {
  current_display_class.style.backgroundColor = 'orange';
  level_number = levelus


  document.getElementsByClassName('circle')[current_display_level].style.backgroundColor = 'white';
  document.getElementsByClassName('circle2')[current_display_level].style.backgroundColor = 'white';
  document.getElementsByClassName('circle3')[current_display_level].style.backgroundColor = 'white';

  current_display_level = Number(level_number)
  if (class_name == 'artificer') {
  	document.getElementById('long19').style.display = 'none';
    document.getElementById('long15').style.display = 'block';
    document.getElementById('shrt15').style.display = 'none';
    document.getElementsByClassName('circle3')[current_display_level].style.backgroundColor = 'orange';
  }
  else if (class_name == 'paladin' || class_name == 'ranger') {
    document.getElementById('long19').style.display = 'none';
    document.getElementById('long15').style.display = 'none';
    document.getElementById('shrt15').style.display = 'block';
    document.getElementsByClassName('circle2')[current_display_level].style.backgroundColor = 'orange';
  } else {
    document.getElementById('shrt15').style.display = 'none';
    document.getElementById('long15').style.display = 'none';
    document.getElementById('long19').style.display = 'block';
    document.getElementsByClassName('circle')[current_display_level].style.backgroundColor = 'orange';
  }

  //console.log(eval(class_name+current_display_level))


  var content = '<div class="TableBody"><div class="TableRow">'
  draw_table_swipe = []
  draw_table = []
  draw_table2 = []
  for (i = 0; i < eval(class_name + current_display_level).length; i++) {

    for (j = 0; j < source_check.length; j++) {
      if (eval(class_name + current_display_level)[i].indexOf(source_check[j]) >= 0) {
        if (draw_table[draw_table.length - 1] != eval(class_name + current_display_level)[i]) {
          draw_table.push(eval(class_name + current_display_level)[i]);
          draw_table_swipe.push(eval(class_name + current_display_level)[i]);
        }
      }
    }
  }

  /*if(window.screen.orientation.type==="portrait-primary" || window.screen.orientation.type==="portrait-secondary") {
  	var n=3
  }
  else {
  	var n=6
  } старый вариант */

  var port = window.matchMedia('(max-device-width : 1920px)');
  if (port.matches) {
    var n = 3
  } else {
    var n = 4
  }
  /*Ебанутая хуйня*/

  var rows = Math.floor(draw_table.length / n)
  var ostatok = draw_table.length % n
  for (i = 1; i <= ostatok; i++) {
    draw_table2.push(draw_table[(rows + 1) * i - 1]);
  }

  for (i = 0; i < draw_table2.length; i++) {
    draw_table.splice(draw_table.indexOf(draw_table2[i]), 1);
  }

  var k = 0
  var l = k
  for (i = 0; i < rows; i++) {

    for (j = 0; j < n; j++) {
      if (l < draw_table.length) {
        content += '<div class="TableCell2" onclick=Search(this.innerHTML) ontouch=Search(this.innerHTML)>' + draw_table[l] + '</div>';
        l = l + rows
      }

    }
    content += '</div><div class="TableRow">';
    k = k + 1
    var l = k
  }

  for (i = 0; i < draw_table2.length; i++) {
    content += '<div class="TableCell2" onclick=Search(this.innerHTML) ontouch=Search(this.innerHTML)>' + draw_table2[i] + '</div>';
  }

  content += '</div><div class="TableRow">';
  /*Ебанутая хуйня*/

  //Отрисовка по строкам.
  //for(i=0; i<draw_table.length; i++){
  //   if ((i+1) % n == 0) {
  //  		content += '<div class="TableCell2" onclick=Search(this.innerHTML) ontouch=Search(this.innerHTML)>' + draw_table[i] + '</div></div><div class="TableRow">';
  //  	}
  //  	else {
  //  		content += '<div class="TableCell2" onclick=Search(this.innerHTML) ontouch=Search(this.innerHTML)>' + draw_table[i] + '</div>';
  //  	}
  //}

  content += '</div></div>'

  document.getElementById('table').innerHTML = content
}




function Search(neadle) {	

   html = neadle;	
  if (html == undefined) {	
    html = '4324326547658765';	
  } else {}	



   for (var i = 0; i < spellname.length; i++) {	

     if (spellname[i].innerHTML.toUpperCase().indexOf(html.toUpperCase()) == 0) {	
      des[i].style.display = 'block';	
      current_display_spell = spellname[i].innerHTML;

      //перебивание # название спела в ссылке
      tmp = document.URL.split('#');
  	  url = decodeURI(tmp[1]);
  	  window.location = url.replace( url , '#' + current_display_spell);


     } else {	
      des[i].style.display = 'none';	
    }	
  }	

   document.getElementById('lightbox').style.display = 'block'	
}




function SearchString() {
  //found = 0

  document.getElementById('lightbox').style.display = 'block';

  var check = document.getElementById('searchall').checked;
  var neadlestring = document.getElementById('neadlestring').value.toLowerCase();

  //Для выполнения поиска, если поисковая строка пустая
  if (neadlestring.length == 0) {
    neadlestring = " ";
    var neadlestringex = " ";
  } else {
    var neadlestringex = neadlestring[0].substring(0, 1).toUpperCase() + neadlestring.slice(1)
  }




  var clvl = document.getElementById('clvl').value; //Выборка уровня в выпадающем списке
  var cschool1 = document.getElementById('cschool1').value; //Выборка школы1 в выпадающем списке
  var cschool2 = document.getElementById('cschool2').value; //Выборка школы2 в выпадающем списке
  var cname = document.getElementById('cname').value; //Выборка класса в выпадающем списке
  var ctime = document.getElementById('ctime').value; //Выборка времени каста в выпадающем списке
  var ccomp = document.getElementById('ccomp').value; //Выборка компонентов в выпадающем списке
  var cduration = document.getElementById('cduration').value; //Выборка компонентов в выпадающем списке


  //На случай если одна из школ пуста
  if ((cschool1 == "") && (cschool2 != "")) {
    cschool1 = cschool2
  } else if ((cschool2 == "") && (cschool1 != "")) {
    cschool2 = cschool1
  }


  //Концентрация (?)
  //Компоненты (?)
  //Дистанция (?) наверное нет
  //replaceser = '<span>'+neadlestring+'</span>';
  //replaceser2 = '<span>'+neadlestringex+'</span>';

  for (var i = 0; i < des.length; i++) {
    //new_string = des[i].innerHTML
    	var gacha = 0
    	for (var j=0; j<source_check.length; j++) {
    			if (spellname[i].innerHTML.indexOf(source_check[j]) >= 0)
    				{
    					var gacha = 1;
    				}
    	}
//gacha - переменная для проверки, что спелл взят из источника, отмеченного галочкой в настройках. Если в имени спелла есть "КИ" и "КИ" отмечен галочкой, то тогда спелл отображается.
    if (check === true) {

      if (cduration != "1") //спелл с концентрацией или мгновенный
      {

        if (((des[i].innerHTML.indexOf(neadlestring.toUpperCase()) >= 0) || (des[i].innerHTML.indexOf(neadlestring) >= 0) || (des[i].innerHTML.indexOf(neadlestringex) >= 0)) && (h3[i].innerHTML.indexOf(clvl) >= 0) && ((h3[i].innerHTML.indexOf(cschool1) >= 0) || (h3[i].innerHTML.indexOf(cschool2) >= 0)) && ((des[i].innerHTML.indexOf(ctime) <= des[i].innerHTML.indexOf('<strong>Время') + 160) && des[i].innerHTML.indexOf(ctime) >= 0) && (des[i].innerHTML.indexOf(ccomp) >= 0) && (des[i].innerHTML.indexOf(cduration) >= 0) && (des[i].innerHTML.indexOf(cname) >= 0) && gacha == 1) {
          /*(des[i].innerHTML.indexOf(neadlestring.toUpperCase()) >= 0) || (des[i].innerHTML.indexOf(neadlestring) >= 0) || (des[i].innerHTML.indexOf(neadlestringex) >= 0)
          Основная поисковая строка, ищется по всем регистрам в полном тексте спелла des[i]
          */

          /*(des[i].innerHTML.indexOf(clvl) >=0)
          Ищем уровень спелла в h3 (Уровень спелла и школа)
          */

          /*((h3[i].innerHTML.indexOf(cschool1) >=0) || (h3[i].innerHTML.indexOf(cschool2) >=0))
          Одна или другая школа
          */

          /*((des[i].innerHTML.indexOf(ctime) <= des[i].innerHTML.indexOf('<b>Время')+60) && des[i].innerHTML.indexOf(ctime) >= 0)
          Добавлено чтобы выборка шла и со спеллов где время активации варьируется типа <p><b>Время накладывания:</b> 1 действие или 8 часов</p>
          */


          /*(des[i].innerHTML.indexOf(ccomp) >=0)
          (des[i].innerHTML.indexOf(cduration) >=0)
          (des[i].innerHTML.indexOf(cname) >=0)
          Выборка по компонентам, длительности, названию класса
          */

          //	var new_string=new_string.replace(new RegExp(neadlestring, 'g'), replaceser);
          //	var new_string=new_string.replace(new RegExp(neadlestringex, 'g'), replaceser2);
          //  var new_string=new_string.replace(neadlestring.toUpperCase(), '<span>'+neadlestring.toUpperCase()+'</span>');
          des[i].style.display = 'block';
          found.push(i)
        } else {
          des[i].style.display = 'none';
        }
      } else //Длительный спелл без концентрации || (des[i].innerHTML.indexOf('Мгновенная') < 0)
      {
        if (((des[i].innerHTML.indexOf(neadlestring.toUpperCase()) >= 0) || (des[i].innerHTML.indexOf(neadlestring) >= 0) || (des[i].innerHTML.indexOf(neadlestringex) >= 0)) && (h3[i].innerHTML.indexOf(clvl) >= 0) && ((h3[i].innerHTML.indexOf(cschool1) >= 0) || (h3[i].innerHTML.indexOf(cschool2) >= 0)) && ((des[i].innerHTML.indexOf(ctime) <= des[i].innerHTML.indexOf('<b>Время') + 60) && des[i].innerHTML.indexOf(ctime) >= 0) && (des[i].innerHTML.indexOf(ccomp) >= 0) && ((des[i].innerHTML.indexOf('Концентрация') < 0) && (des[i].innerHTML.indexOf('Мгновенная') < 0) || ((des[i].innerHTML.indexOf('Мгновенная или') >= 0))) && (des[i].innerHTML.indexOf(cname) >= 0) && gacha == 1) {
          //	var new_string=new_string.replace(new RegExp(neadlestring, 'g'), replaceser);
          //	var new_string=new_string.replace(new RegExp(neadlestringex, 'g'), replaceser2);
          //  var new_string=new_string.replace(neadlestring.toUpperCase(), '<span>'+neadlestring.toUpperCase()+'</span>');

          /*((des[i].innerHTML.indexOf('Концентрация') < 0) && (des[i].innerHTML.indexOf('Мгновенная') < 0) || ((des[i].innerHTML.indexOf('Мгновенная или') >= 0)))
          Отличие от выборки выше: при cduration = "1" выполняется именно он. Ищем спелл, где длительность либо без концентрации, либо доступна не мгновенная активация
          */

          des[i].style.display = 'block';
          found.push(i)
        } else {
          des[i].style.display = 'none';
        }

      }



      // 	des[i].innerHTML=new_string;
    } else {
      if (neadlestring.length == 0) {} else {
        if ((spellname[i].innerHTML.toUpperCase().indexOf(neadlestring.toUpperCase()) >= 0) && gacha == 1) {
          des[i].style.display = 'block';
          found.push(i);


        } else {
          des[i].style.display = 'none';
        }
      }
    }
  }


if (found.length == 0) {
   document.getElementById("nothing").style.display = "block";
} else {
   document.getElementById("nothing").style.display = "none";
}


}
